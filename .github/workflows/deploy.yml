name: Deploy to PaaS
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to deploy to eg: development etc'
        required: true
      sha:
        description: Commit sha to be deployed
        required: true

env:
  APP_REPOSITORY:  dfedigital/get-teacher-training-adviser-service
  CONTAINER:       get-teacher-training-adviser-service
  DOMAIN:          london.cloudapps.digital

jobs:
  deploy:
    name: 'Deploy ${{ github.event.inputs.environment }}'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    steps:
       - name: Checkout
         uses: actions/checkout@v2

       - name: Get Short SHA
         id: sha
         run: echo ::set-output name=short::$(echo "${{ github.event.inputs.sha }}" | cut -c -7)

       - uses: hashicorp/setup-terraform@v1.2.1
         with:
              terraform_version: 0.13.4

       - name: Wait for any previous runs to complete
         uses: softprops/turnstyle@v1
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           continue-after-seconds: 180
   
       - name: Start ${{ github.event.inputs.environment }} Deployment
         uses: bobheadxi/deployments@v0.4.2
         id: deployment
         with:
           step: start
           token: ${{ secrets.GITHUB_TOKEN }}
           env: ${{ github.event.inputs.environment }}
           ref: ${{ github.event.inputs.sha }}

       - name: Terraform Init
         run: |
             cd terraform/paas && pwd
             terraform init -backend-config=dev.bk.vars
         env:
             TF_VAR_user:              "${{ secrets.GOVUKPAAS_USERNAME  }}"
             TF_VAR_password:          "${{ secrets.GOVUKPAAS_PASSWORD  }}"
             ARM_ACCESS_KEY:           "${{ secrets.DEV_ARM_ACCESS_KEY  }}"

       - name: Terraform Plan
         run: |
             cd terraform/paas && pwd
             terraform plan -var-file=dev.env.tfvars -out plan
         env:
             TF_VAR_RAILS_ENV:         "rolling"
             TF_VAR_paas_adviser_docker_image: ${{env.APP_REPOSITORY}}:sha-${{ steps.sha.outputs.short}} 
             TF_VAR_RAILS_MASTER_KEY:  "${{ secrets.RAILS_MASTER_KEY_ROLLING }}"
             TF_VAR_HTTPAUTH_PASSWORD: "${{ secrets.HTTPAUTH_PASSWORD }}"
             TF_VAR_HTTPAUTH_USERNAME: "${{ secrets.HTTPAUTH_USERNAME }}"
             TF_VAR_user:              "${{ secrets.GOVUKPAAS_USERNAME  }}"
             TF_VAR_password:          "${{ secrets.GOVUKPAAS_PASSWORD  }}"
             ARM_ACCESS_KEY:           "${{ secrets.DEV_ARM_ACCESS_KEY  }}"
             TF_VAR_docker_username:   "${{ secrets.DOCKERHUB_USERNAME }}"
             TF_VAR_docker_password:   "${{ secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN }}"


       - name: Terraform Apply
         run: |
             cd terraform/paas && pwd
             terraform apply -auto-approve plan
         env:
             TF_VAR_user:              "${{ secrets.GOVUKPAAS_USERNAME  }}"
             TF_VAR_password:          "${{ secrets.GOVUKPAAS_PASSWORD  }}"
             ARM_ACCESS_KEY:           "${{ secrets.DEV_ARM_ACCESS_KEY  }}"
 
       - name: Smoke tests
         run: |
             tests/confidence/healthcheck.sh  "get-teacher-training-adviser-service-dev"  "${{ steps.sha.outputs.short }}"
         env:
             HTTPAUTH_PASSWORD: "${{ secrets.HTTPAUTH_PASSWORD }}"
             HTTPAUTH_USERNAME: "${{ secrets.HTTPAUTH_USERNAME }}"

       - name: Update ${{ github.event.inputs.environment }} status
         if: always() 
         uses: bobheadxi/deployments@v0.4.2
         with:
           step: finish
           token: ${{ secrets.GITHUB_TOKEN }}
           env: ${{ github.event.inputs.environment }}
           status: ${{ job.status }}
           deployment_id: ${{ steps.deployment.outputs.deployment_id }}
           ref: ${{ github.event.inputs.sha }}

       - name: Trigger OWASP Testing
         if: github.ref == 'refs/heads/master' && github.event.inputs.environment == 'Development'
         uses: benc-uk/workflow-dispatch@v1.1
         with:
           workflow: owasp
           token: ${{ secrets.ACTIONS_API_ACCESS_TOKEN }}
           inputs: '{"environment": "dev"}'

       - name: Slack Notification
         if: failure()
         uses: rtCamp/action-slack-notify@master
         env:
           SLACK_CHANNEL: getintoteaching_tech
           SLACK_COLOR: '#3278BD'
           SLACK_ICON: https://github.com/rtCamp.png?size=48
           SLACK_TITLE: 'Failure:  Deploying Teacher Training Adviser to ${{ github.event.inputs.environment }}'
           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
